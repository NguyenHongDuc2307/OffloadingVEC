doc/manual/timermanager.md:40:                std::cerr << "recurring Timer called from " << this->getFullPath() << std::endl;
doc/manual/timermanager.md:45:                std::cerr << "one-shot timer fired from " << this->getFullPath() << " at " << simTime() << std::endl;
doc/manual/timermanager.md:93:            std::cerr << "recurring Timer called from " << this->getFullPath() << std::endl;
doc/manual/timermanager.md:96:            std::cerr << "one-shot timer fired from " << this->getFullPath() << " at " << simTime() << std::endl;
Binary file out/clang-debug/src/libveins_dbg.dll matches
Binary file out/clang-debug/src/veins/base/connectionManager/ChannelAccess.o matches
Binary file out/clang-debug/src/veins/base/phyLayer/BasePhyLayer.o matches
Binary file out/clang-debug/src/veins/base/toolbox/Signal.o matches
Binary file out/clang-debug/src/veins/base/toolbox/Spectrum.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/BreakpointPathlossModel.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/NakagamiFading.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/PERModel.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/SimpleObstacleShadowing.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/SimplePathlossModel.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/TwoRayInterferenceModel.o matches
Binary file out/clang-debug/src/veins/modules/analogueModel/VehicleObstacleShadowing.o matches
Binary file out/clang-debug/src/veins/modules/obstacle/VehicleObstacleControl.o matches
Binary file out/clang-debug/src/veins/modules/utility/BBoxLookup.o matches
Binary file out/clang-release/src/libveins.dll matches
Binary file out/clang-release/src/veins/base/toolbox/Signal.o matches
Binary file out/clang-release/src/veins/base/toolbox/Spectrum.o matches
Binary file out/clang-release/src/veins/modules/mobility/traci/TraCICommandInterface.o matches
Binary file out/clang-release/src/veins/modules/mobility/traci/TraCIScenarioManager.o matches
Binary file out/clang-release/src/veins/modules/mobility/traci/TraCIScenarioManagerForker.o matches
Binary file out/clang-release/src/veins/modules/utility/BBoxLookup.o matches
Binary file src/libveins.dll matches
Binary file src/libveins_dbg.dll matches
src/veins/base/messages/AirFrame_m.cc:185:    this->duration = 0;
src/veins/base/messages/AirFrame_m.cc:186:    this->state = 1;
src/veins/base/messages/AirFrame_m.cc:187:    this->type = 0;
src/veins/base/messages/AirFrame_m.cc:188:    this->id = 0;
src/veins/base/messages/AirFrame_m.cc:189:    this->protocolId = 0;
src/veins/base/messages/AirFrame_m.cc:190:    this->channel = 0;
src/veins/base/messages/AirFrame_m.cc:191:    this->mcs = 0;
src/veins/base/messages/AirFrame_m.cc:213:    this->signal = other.signal;
src/veins/base/messages/AirFrame_m.cc:214:    this->poa = other.poa;
src/veins/base/messages/AirFrame_m.cc:215:    this->duration = other.duration;
src/veins/base/messages/AirFrame_m.cc:216:    this->state = other.state;
src/veins/base/messages/AirFrame_m.cc:217:    this->type = other.type;
src/veins/base/messages/AirFrame_m.cc:218:    this->id = other.id;
src/veins/base/messages/AirFrame_m.cc:219:    this->protocolId = other.protocolId;
src/veins/base/messages/AirFrame_m.cc:220:    this->channel = other.channel;
src/veins/base/messages/AirFrame_m.cc:221:    this->mcs = other.mcs;
src/veins/base/messages/AirFrame_m.cc:227:    doParsimPacking(b,this->signal);
src/veins/base/messages/AirFrame_m.cc:228:    doParsimPacking(b,this->poa);
src/veins/base/messages/AirFrame_m.cc:229:    doParsimPacking(b,this->duration);
src/veins/base/messages/AirFrame_m.cc:230:    doParsimPacking(b,this->state);
src/veins/base/messages/AirFrame_m.cc:231:    doParsimPacking(b,this->type);
src/veins/base/messages/AirFrame_m.cc:232:    doParsimPacking(b,this->id);
src/veins/base/messages/AirFrame_m.cc:233:    doParsimPacking(b,this->protocolId);
src/veins/base/messages/AirFrame_m.cc:234:    doParsimPacking(b,this->channel);
src/veins/base/messages/AirFrame_m.cc:235:    doParsimPacking(b,this->mcs);
src/veins/base/messages/AirFrame_m.cc:241:    doParsimUnpacking(b,this->signal);
src/veins/base/messages/AirFrame_m.cc:242:    doParsimUnpacking(b,this->poa);
src/veins/base/messages/AirFrame_m.cc:243:    doParsimUnpacking(b,this->duration);
src/veins/base/messages/AirFrame_m.cc:244:    doParsimUnpacking(b,this->state);
src/veins/base/messages/AirFrame_m.cc:245:    doParsimUnpacking(b,this->type);
src/veins/base/messages/AirFrame_m.cc:246:    doParsimUnpacking(b,this->id);
src/veins/base/messages/AirFrame_m.cc:247:    doParsimUnpacking(b,this->protocolId);
src/veins/base/messages/AirFrame_m.cc:248:    doParsimUnpacking(b,this->channel);
src/veins/base/messages/AirFrame_m.cc:249:    doParsimUnpacking(b,this->mcs);
src/veins/base/messages/AirFrame_m.cc:254:    return this->signal;
src/veins/base/messages/AirFrame_m.cc:259:    this->signal = signal;
src/veins/base/messages/AirFrame_m.cc:264:    return this->poa;
src/veins/base/messages/AirFrame_m.cc:269:    this->poa = poa;
src/veins/base/messages/AirFrame_m.cc:274:    return this->duration;
src/veins/base/messages/AirFrame_m.cc:279:    this->duration = duration;
src/veins/base/messages/AirFrame_m.cc:284:    return this->state;
src/veins/base/messages/AirFrame_m.cc:289:    this->state = state;
src/veins/base/messages/AirFrame_m.cc:294:    return this->type;
src/veins/base/messages/AirFrame_m.cc:299:    this->type = type;
src/veins/base/messages/AirFrame_m.cc:304:    return this->id;
src/veins/base/messages/AirFrame_m.cc:309:    this->id = id;
src/veins/base/messages/AirFrame_m.cc:314:    return this->protocolId;
src/veins/base/messages/AirFrame_m.cc:319:    this->protocolId = protocolId;
src/veins/base/messages/AirFrame_m.cc:324:    return this->channel;
src/veins/base/messages/AirFrame_m.cc:329:    this->channel = channel;
src/veins/base/messages/AirFrame_m.cc:334:    return this->mcs;
src/veins/base/messages/AirFrame_m.cc:339:    this->mcs = mcs;
src/veins/base/messages/BorderMsg_m.cc:185:    this->policy = 0;
src/veins/base/messages/BorderMsg_m.cc:207:    this->policy = other.policy;
src/veins/base/messages/BorderMsg_m.cc:208:    this->startPos = other.startPos;
src/veins/base/messages/BorderMsg_m.cc:209:    this->direction = other.direction;
src/veins/base/messages/BorderMsg_m.cc:215:    doParsimPacking(b,this->policy);
src/veins/base/messages/BorderMsg_m.cc:216:    doParsimPacking(b,this->startPos);
src/veins/base/messages/BorderMsg_m.cc:217:    doParsimPacking(b,this->direction);
src/veins/base/messages/BorderMsg_m.cc:223:    doParsimUnpacking(b,this->policy);
src/veins/base/messages/BorderMsg_m.cc:224:    doParsimUnpacking(b,this->startPos);
src/veins/base/messages/BorderMsg_m.cc:225:    doParsimUnpacking(b,this->direction);
src/veins/base/messages/BorderMsg_m.cc:230:    return this->policy;
src/veins/base/messages/BorderMsg_m.cc:235:    this->policy = policy;
src/veins/base/messages/BorderMsg_m.cc:240:    return this->startPos;
src/veins/base/messages/BorderMsg_m.cc:245:    this->startPos = startPos;
src/veins/base/messages/BorderMsg_m.cc:250:    return this->direction;
src/veins/base/messages/BorderMsg_m.cc:255:    this->direction = direction;
src/veins/base/messages/MacPkt_m.cc:185:    this->sequenceId = 0;
src/veins/base/messages/MacPkt_m.cc:207:    this->destAddr = other.destAddr;
src/veins/base/messages/MacPkt_m.cc:208:    this->srcAddr = other.srcAddr;
src/veins/base/messages/MacPkt_m.cc:209:    this->sequenceId = other.sequenceId;
src/veins/base/messages/MacPkt_m.cc:215:    doParsimPacking(b,this->destAddr);
src/veins/base/messages/MacPkt_m.cc:216:    doParsimPacking(b,this->srcAddr);
src/veins/base/messages/MacPkt_m.cc:217:    doParsimPacking(b,this->sequenceId);
src/veins/base/messages/MacPkt_m.cc:223:    doParsimUnpacking(b,this->destAddr);
src/veins/base/messages/MacPkt_m.cc:224:    doParsimUnpacking(b,this->srcAddr);
src/veins/base/messages/MacPkt_m.cc:225:    doParsimUnpacking(b,this->sequenceId);
src/veins/base/messages/MacPkt_m.cc:230:    return this->destAddr;
src/veins/base/messages/MacPkt_m.cc:235:    this->destAddr = destAddr;
src/veins/base/messages/MacPkt_m.cc:240:    return this->srcAddr;
src/veins/base/messages/MacPkt_m.cc:245:    this->srcAddr = srcAddr;
src/veins/base/messages/MacPkt_m.cc:250:    return this->sequenceId;
src/veins/base/messages/MacPkt_m.cc:255:    this->sequenceId = sequenceId;
src/veins/base/phyLayer/BasePhyLayer.cc:316:    return std::make_shared<SampledAntenna1D>(values, offsetType, offsetParams, rotationType, rotationParams, this->getRNG(0));
src/veins/base/toolbox/Signal.cc:349:    ASSERT(this->getSpectrum() == other.getSpectrum());
src/veins/base/toolbox/Signal.cc:350:    ASSERT(!(this->timingUsed && other.timingUsed) || (this->sendingStart == other.sendingStart && this->duration == other.duration));
src/veins/base/toolbox/Signal.cc:364:    ASSERT(this->getSpectrum() == other.getSpectrum());
src/veins/base/toolbox/Signal.cc:365:    ASSERT(!(this->timingUsed && other.timingUsed) || (this->sendingStart == other.sendingStart && this->duration == other.duration));
src/veins/base/toolbox/Signal.cc:379:    ASSERT(this->getSpectrum() == other.getSpectrum());
src/veins/base/toolbox/Signal.cc:380:    ASSERT(!(this->timingUsed && other.timingUsed) || (this->sendingStart == other.sendingStart && this->duration == other.duration));
src/veins/base/toolbox/Signal.cc:394:    ASSERT(this->getSpectrum() == other.getSpectrum());
src/veins/base/toolbox/Signal.cc:395:    ASSERT(!(this->timingUsed && other.timingUsed) || (this->sendingStart == other.sendingStart && this->duration == other.duration));
src/veins/base/utils/AntennaPosition.h:63:        ASSERT(t >= this->t);
src/veins/base/utils/AntennaPosition.h:65:        auto dt = t - this->t;
src/veins/base/utils/Coord.h:284:        return Coord(this->x < a.x ? this->x : a.x, this->y < a.y ? this->y : a.y, this->z < a.z ? this->z : a.z);
src/veins/base/utils/Coord.h:292:        return Coord(this->x > a.x ? this->x : a.x, this->y > a.y ? this->y : a.y, this->z > a.z ? this->z : a.z);
src/veins/base/utils/Move.h:92:        this->speed = speed;
src/veins/base/utils/Move.h:116:        this->lastPos = startPos;
src/veins/base/utils/Move.h:117:        this->startPos = startPos;
src/veins/base/utils/Move.h:118:        this->startTime = startTime;
src/veins/base/utils/Move.h:157:        this->orientation = orientation;
src/veins/base/utils/Move.h:167:        this->direction = direction;
src/veins/modules/analogueModel/NakagamiFading.cc:49:    double m = this->m;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:185:    this->senderAddress = -1;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:186:    this->serial = 0;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:208:    this->demoData = other.demoData;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:209:    this->senderAddress = other.senderAddress;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:210:    this->serial = other.serial;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:216:    doParsimPacking(b,this->demoData);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:217:    doParsimPacking(b,this->senderAddress);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:218:    doParsimPacking(b,this->serial);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:224:    doParsimUnpacking(b,this->demoData);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:225:    doParsimUnpacking(b,this->senderAddress);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:226:    doParsimUnpacking(b,this->serial);
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:231:    return this->demoData.c_str();
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:236:    this->demoData = demoData;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:241:    return this->senderAddress;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:246:    this->senderAddress = senderAddress;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:251:    return this->serial;
src/veins/modules/application/traci/TraCIDemo11pMessage_m.cc:256:    this->serial = serial;
src/veins/modules/mac/ieee80211p/Mac1609_4.cc:537:    this->mcs = mcs;
src/veins/modules/messages/AckTimeOutMessage_m.cc:185:    this->wsmId = -1;
src/veins/modules/messages/AckTimeOutMessage_m.cc:186:    this->ac = -1;
src/veins/modules/messages/AckTimeOutMessage_m.cc:208:    this->wsmId = other.wsmId;
src/veins/modules/messages/AckTimeOutMessage_m.cc:209:    this->ac = other.ac;
src/veins/modules/messages/AckTimeOutMessage_m.cc:215:    doParsimPacking(b,this->wsmId);
src/veins/modules/messages/AckTimeOutMessage_m.cc:216:    doParsimPacking(b,this->ac);
src/veins/modules/messages/AckTimeOutMessage_m.cc:222:    doParsimUnpacking(b,this->wsmId);
src/veins/modules/messages/AckTimeOutMessage_m.cc:223:    doParsimUnpacking(b,this->ac);
src/veins/modules/messages/AckTimeOutMessage_m.cc:228:    return this->wsmId;
src/veins/modules/messages/AckTimeOutMessage_m.cc:233:    this->wsmId = wsmId;
src/veins/modules/messages/AckTimeOutMessage_m.cc:238:    return this->ac;
src/veins/modules/messages/AckTimeOutMessage_m.cc:243:    this->ac = ac;
src/veins/modules/messages/AirFrame11p_m.cc:185:    this->underMinPowerLevel = false;
src/veins/modules/messages/AirFrame11p_m.cc:186:    this->wasTransmitting = false;
src/veins/modules/messages/AirFrame11p_m.cc:208:    this->underMinPowerLevel = other.underMinPowerLevel;
src/veins/modules/messages/AirFrame11p_m.cc:209:    this->wasTransmitting = other.wasTransmitting;
src/veins/modules/messages/AirFrame11p_m.cc:215:    doParsimPacking(b,this->underMinPowerLevel);
src/veins/modules/messages/AirFrame11p_m.cc:216:    doParsimPacking(b,this->wasTransmitting);
src/veins/modules/messages/AirFrame11p_m.cc:222:    doParsimUnpacking(b,this->underMinPowerLevel);
src/veins/modules/messages/AirFrame11p_m.cc:223:    doParsimUnpacking(b,this->wasTransmitting);
src/veins/modules/messages/AirFrame11p_m.cc:228:    return this->underMinPowerLevel;
src/veins/modules/messages/AirFrame11p_m.cc:233:    this->underMinPowerLevel = underMinPowerLevel;
src/veins/modules/messages/AirFrame11p_m.cc:238:    return this->wasTransmitting;
src/veins/modules/messages/AirFrame11p_m.cc:243:    this->wasTransmitting = wasTransmitting;
src/veins/modules/messages/BaseFrame1609_4_m.cc:185:    this->channelNumber = 0;
src/veins/modules/messages/BaseFrame1609_4_m.cc:186:    this->userPriority = 7;
src/veins/modules/messages/BaseFrame1609_4_m.cc:187:    this->psid = 0;
src/veins/modules/messages/BaseFrame1609_4_m.cc:188:    this->recipientAddress = -1;
src/veins/modules/messages/BaseFrame1609_4_m.cc:210:    this->channelNumber = other.channelNumber;
src/veins/modules/messages/BaseFrame1609_4_m.cc:211:    this->userPriority = other.userPriority;
src/veins/modules/messages/BaseFrame1609_4_m.cc:212:    this->psid = other.psid;
src/veins/modules/messages/BaseFrame1609_4_m.cc:213:    this->recipientAddress = other.recipientAddress;
src/veins/modules/messages/BaseFrame1609_4_m.cc:219:    doParsimPacking(b,this->channelNumber);
src/veins/modules/messages/BaseFrame1609_4_m.cc:220:    doParsimPacking(b,this->userPriority);
src/veins/modules/messages/BaseFrame1609_4_m.cc:221:    doParsimPacking(b,this->psid);
src/veins/modules/messages/BaseFrame1609_4_m.cc:222:    doParsimPacking(b,this->recipientAddress);
src/veins/modules/messages/BaseFrame1609_4_m.cc:228:    doParsimUnpacking(b,this->channelNumber);
src/veins/modules/messages/BaseFrame1609_4_m.cc:229:    doParsimUnpacking(b,this->userPriority);
src/veins/modules/messages/BaseFrame1609_4_m.cc:230:    doParsimUnpacking(b,this->psid);
src/veins/modules/messages/BaseFrame1609_4_m.cc:231:    doParsimUnpacking(b,this->recipientAddress);
src/veins/modules/messages/BaseFrame1609_4_m.cc:236:    return this->channelNumber;
src/veins/modules/messages/BaseFrame1609_4_m.cc:241:    this->channelNumber = channelNumber;
src/veins/modules/messages/BaseFrame1609_4_m.cc:246:    return this->userPriority;
src/veins/modules/messages/BaseFrame1609_4_m.cc:251:    this->userPriority = userPriority;
src/veins/modules/messages/BaseFrame1609_4_m.cc:256:    return this->psid;
src/veins/modules/messages/BaseFrame1609_4_m.cc:261:    this->psid = psid;
src/veins/modules/messages/BaseFrame1609_4_m.cc:266:    return this->recipientAddress;
src/veins/modules/messages/BaseFrame1609_4_m.cc:271:    this->recipientAddress = recipientAddress;
src/veins/modules/messages/DemoSafetyMessage_m.cc:206:    this->senderPos = other.senderPos;
src/veins/modules/messages/DemoSafetyMessage_m.cc:207:    this->senderSpeed = other.senderSpeed;
src/veins/modules/messages/DemoSafetyMessage_m.cc:213:    doParsimPacking(b,this->senderPos);
src/veins/modules/messages/DemoSafetyMessage_m.cc:214:    doParsimPacking(b,this->senderSpeed);
src/veins/modules/messages/DemoSafetyMessage_m.cc:220:    doParsimUnpacking(b,this->senderPos);
src/veins/modules/messages/DemoSafetyMessage_m.cc:221:    doParsimUnpacking(b,this->senderSpeed);
src/veins/modules/messages/DemoSafetyMessage_m.cc:226:    return this->senderPos;
src/veins/modules/messages/DemoSafetyMessage_m.cc:231:    this->senderPos = senderPos;
src/veins/modules/messages/DemoSafetyMessage_m.cc:236:    return this->senderSpeed;
src/veins/modules/messages/DemoSafetyMessage_m.cc:241:    this->senderSpeed = senderSpeed;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:185:    this->targetChannel = 0;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:207:    this->targetChannel = other.targetChannel;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:208:    this->serviceDescription = other.serviceDescription;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:214:    doParsimPacking(b,this->targetChannel);
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:215:    doParsimPacking(b,this->serviceDescription);
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:221:    doParsimUnpacking(b,this->targetChannel);
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:222:    doParsimUnpacking(b,this->serviceDescription);
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:227:    return this->targetChannel;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:232:    this->targetChannel = targetChannel;
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:237:    return this->serviceDescription.c_str();
src/veins/modules/messages/DemoServiceAdvertisement_m.cc:242:    this->serviceDescription = serviceDescription;
src/veins/modules/messages/Mac80211Ack_m.cc:185:    this->messageId = 0;
src/veins/modules/messages/Mac80211Ack_m.cc:207:    this->messageId = other.messageId;
src/veins/modules/messages/Mac80211Ack_m.cc:213:    doParsimPacking(b,this->messageId);
src/veins/modules/messages/Mac80211Ack_m.cc:219:    doParsimUnpacking(b,this->messageId);
src/veins/modules/messages/Mac80211Ack_m.cc:224:    return this->messageId;
src/veins/modules/messages/Mac80211Ack_m.cc:229:    this->messageId = messageId;
src/veins/modules/messages/Mac80211Pkt_m.cc:185:    this->address3 = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:186:    this->address4 = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:187:    this->fragmentation = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:188:    this->informationDS = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:189:    this->sequenceControl = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:190:    this->retry = false;
src/veins/modules/messages/Mac80211Pkt_m.cc:191:    this->duration = 0;
src/veins/modules/messages/Mac80211Pkt_m.cc:213:    this->address3 = other.address3;
src/veins/modules/messages/Mac80211Pkt_m.cc:214:    this->address4 = other.address4;
src/veins/modules/messages/Mac80211Pkt_m.cc:215:    this->fragmentation = other.fragmentation;
src/veins/modules/messages/Mac80211Pkt_m.cc:216:    this->informationDS = other.informationDS;
src/veins/modules/messages/Mac80211Pkt_m.cc:217:    this->sequenceControl = other.sequenceControl;
src/veins/modules/messages/Mac80211Pkt_m.cc:218:    this->retry = other.retry;
src/veins/modules/messages/Mac80211Pkt_m.cc:219:    this->duration = other.duration;
src/veins/modules/messages/Mac80211Pkt_m.cc:225:    doParsimPacking(b,this->address3);
src/veins/modules/messages/Mac80211Pkt_m.cc:226:    doParsimPacking(b,this->address4);
src/veins/modules/messages/Mac80211Pkt_m.cc:227:    doParsimPacking(b,this->fragmentation);
src/veins/modules/messages/Mac80211Pkt_m.cc:228:    doParsimPacking(b,this->informationDS);
src/veins/modules/messages/Mac80211Pkt_m.cc:229:    doParsimPacking(b,this->sequenceControl);
src/veins/modules/messages/Mac80211Pkt_m.cc:230:    doParsimPacking(b,this->retry);
src/veins/modules/messages/Mac80211Pkt_m.cc:231:    doParsimPacking(b,this->duration);
src/veins/modules/messages/Mac80211Pkt_m.cc:237:    doParsimUnpacking(b,this->address3);
src/veins/modules/messages/Mac80211Pkt_m.cc:238:    doParsimUnpacking(b,this->address4);
src/veins/modules/messages/Mac80211Pkt_m.cc:239:    doParsimUnpacking(b,this->fragmentation);
src/veins/modules/messages/Mac80211Pkt_m.cc:240:    doParsimUnpacking(b,this->informationDS);
src/veins/modules/messages/Mac80211Pkt_m.cc:241:    doParsimUnpacking(b,this->sequenceControl);
src/veins/modules/messages/Mac80211Pkt_m.cc:242:    doParsimUnpacking(b,this->retry);
src/veins/modules/messages/Mac80211Pkt_m.cc:243:    doParsimUnpacking(b,this->duration);
src/veins/modules/messages/Mac80211Pkt_m.cc:248:    return this->address3;
src/veins/modules/messages/Mac80211Pkt_m.cc:253:    this->address3 = address3;
src/veins/modules/messages/Mac80211Pkt_m.cc:258:    return this->address4;
src/veins/modules/messages/Mac80211Pkt_m.cc:263:    this->address4 = address4;
src/veins/modules/messages/Mac80211Pkt_m.cc:268:    return this->fragmentation;
src/veins/modules/messages/Mac80211Pkt_m.cc:273:    this->fragmentation = fragmentation;
src/veins/modules/messages/Mac80211Pkt_m.cc:278:    return this->informationDS;
src/veins/modules/messages/Mac80211Pkt_m.cc:283:    this->informationDS = informationDS;
src/veins/modules/messages/Mac80211Pkt_m.cc:288:    return this->sequenceControl;
src/veins/modules/messages/Mac80211Pkt_m.cc:293:    this->sequenceControl = sequenceControl;
src/veins/modules/messages/Mac80211Pkt_m.cc:298:    return this->retry;
src/veins/modules/messages/Mac80211Pkt_m.cc:303:    this->retry = retry;
src/veins/modules/messages/Mac80211Pkt_m.cc:308:    return this->duration;
src/veins/modules/messages/Mac80211Pkt_m.cc:313:    this->duration = duration;
src/veins/modules/messages/PhyControlMessage_m.cc:185:    this->mcs = -1;
src/veins/modules/messages/PhyControlMessage_m.cc:186:    this->txPower_mW = -1;
src/veins/modules/messages/PhyControlMessage_m.cc:208:    this->mcs = other.mcs;
src/veins/modules/messages/PhyControlMessage_m.cc:209:    this->txPower_mW = other.txPower_mW;
src/veins/modules/messages/PhyControlMessage_m.cc:215:    doParsimPacking(b,this->mcs);
src/veins/modules/messages/PhyControlMessage_m.cc:216:    doParsimPacking(b,this->txPower_mW);
src/veins/modules/messages/PhyControlMessage_m.cc:222:    doParsimUnpacking(b,this->mcs);
src/veins/modules/messages/PhyControlMessage_m.cc:223:    doParsimUnpacking(b,this->txPower_mW);
src/veins/modules/messages/PhyControlMessage_m.cc:228:    return this->mcs;
src/veins/modules/messages/PhyControlMessage_m.cc:233:    this->mcs = mcs;
src/veins/modules/messages/PhyControlMessage_m.cc:238:    return this->txPower_mW;
src/veins/modules/messages/PhyControlMessage_m.cc:243:    this->txPower_mW = txPower_mW;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:204:    this->changedAttribute = 0;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:205:    this->changeSource = 0;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:227:    this->tlId = other.tlId;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:228:    this->changedAttribute = other.changedAttribute;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:229:    this->oldValue = other.oldValue;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:230:    this->newValue = other.newValue;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:231:    this->changeSource = other.changeSource;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:237:    doParsimPacking(b,this->tlId);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:238:    doParsimPacking(b,this->changedAttribute);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:239:    doParsimPacking(b,this->oldValue);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:240:    doParsimPacking(b,this->newValue);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:241:    doParsimPacking(b,this->changeSource);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:247:    doParsimUnpacking(b,this->tlId);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:248:    doParsimUnpacking(b,this->changedAttribute);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:249:    doParsimUnpacking(b,this->oldValue);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:250:    doParsimUnpacking(b,this->newValue);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:251:    doParsimUnpacking(b,this->changeSource);
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:256:    return this->tlId.c_str();
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:261:    this->tlId = tlId;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:266:    return this->changedAttribute;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:271:    this->changedAttribute = changedAttribute;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:276:    return this->oldValue.c_str();
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:281:    this->oldValue = oldValue;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:286:    return this->newValue.c_str();
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:291:    this->newValue = newValue;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:296:    return this->changeSource;
src/veins/modules/messages/TraCITrafficLightMessage_m.cc:301:    this->changeSource = changeSource;
src/veins/modules/mobility/traci/TraCIBuffer.cc:55:    this->buf = buf;
src/veins/modules/mobility/traci/TraCIMobility.cc:96:        if (this->setHostSpeed) {
src/veins/modules/mobility/traci/TraCIMobility.cc:153:    this->external_id = external_id;
src/veins/modules/mobility/traci/TraCIMobility.cc:154:    this->lastUpdate = 0;
src/veins/modules/mobility/traci/TraCIMobility.cc:155:    this->roadPosition = position;
src/veins/modules/mobility/traci/TraCIMobility.cc:156:    this->road_id = road_id;
src/veins/modules/mobility/traci/TraCIMobility.cc:157:    this->speed = speed;
src/veins/modules/mobility/traci/TraCIMobility.cc:158:    this->heading = heading;
src/veins/modules/mobility/traci/TraCIMobility.cc:159:    this->hostPositionOffset = par("hostPositionOffset");
src/veins/modules/mobility/traci/TraCIMobility.cc:160:    this->setHostSpeed = par("setHostSpeed");
src/veins/modules/mobility/traci/TraCIMobility.cc:168:    if (this->setHostSpeed) {
src/veins/modules/mobility/traci/TraCIMobility.cc:179:    this->roadPosition = position;
src/veins/modules/mobility/traci/TraCIMobility.cc:180:    this->road_id = road_id;
src/veins/modules/mobility/traci/TraCIMobility.cc:181:    this->speed = speed;
src/veins/modules/mobility/traci/TraCIMobility.cc:182:    this->heading = heading;
src/veins/modules/mobility/traci/TraCIMobility.cc:183:    this->signals = signals;
src/veins/modules/mobility/traci/TraCIMobility.cc:203:        simtime_t updateInterval = simTime() - this->lastUpdate;
src/veins/modules/mobility/traci/TraCIMobility.cc:226:    this->lastUpdate = simTime();
src/veins/modules/mobility/traci/TraCIMobility.cc:240:    if (this->setHostSpeed) {
src/veins/modules/mobility/traci/TraCIMobility.h:101:        this->external_id = external_id;
src/veins/modules/obstacle/MobileHostObstacle.h:55:        this->mobility = mobility;
src/veins/modules/obstacle/MobileHostObstacle.h:59:        this->length = d;
src/veins/modules/obstacle/MobileHostObstacle.h:63:        this->hostPositionOffset = d;
src/veins/modules/obstacle/MobileHostObstacle.h:67:        this->width = d;
src/veins/modules/obstacle/MobileHostObstacle.h:71:        this->height = d;
src/veins/modules/phy/Decider80211p.h:177:        this->myPath = myPath;
src/veins/modules/utility/TimerManager.cc:97:    return this->relativeStart(in).interval(1).repetitions(1);
src/veins/modules/utility/TimerManager.cc:102:    return this->absoluteStart(at).interval(1).repetitions(1);
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:59:    this->updateInterval = updateInterval;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:61:    this->position = position;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:66:    return this->position;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:120:    this->programDefinition = programDefinition;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:125:    this->controlledLinks = controlledLinks;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.cc:144:        this->currentLogicId = logicId;
src/veins/modules/world/traci/trafficLight/TraCITrafficLightInterface.h:43:        this->external_id = external_id;
subprojects/veins_catch/src/catch2/catch.hpp:174:// see: http://stackoverflow.com/questions/36901803/gettimeofday-not-declared-in-this-scope-cygwin
subprojects/veins_inet/src/veins_inet/VeinsInetMobility.cc:52:    this->external_id = external_id;
